name: "Run and Compare Benchmarks"

on:
  push:
    branches:
      - master # Or your main branch

jobs:
  benchmark:
    name: Run, Update, and Deploy Benchmarks
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Code with Submodules
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup Zig
        run: |
          sudo apt-get update
          sudo apt-get install -y zstd
          ZIG_VERSION="0.14.0"
          curl -L "https://ziglang.org/download/${ZIG_VERSION}/zig-linux-x86_64-${ZIG_VERSION}.tar.xz" | tar -xJ
          sudo mv zig-linux-x86_64-${ZIG_VERSION} /usr/local/share/zig
          sudo ln -s /usr/local/share/zig/zig /usr/local/bin/zig
          zig version

      - name: Install Binaryen (for wasm-opt)
        run: sudo apt-get install -y binaryen

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install Dependencies
        run: npm install

      - name: Build Rust and Zig Artifacts
        run: npm run build

      - name: Run Benchmarks
        run: npm run bench

      - name: Prepare Site for Deployment
        id: prepare_site
        run: |
          # Create a directory to hold all deployment files
          mkdir -p gh-pages-deploy

          # Copy the site source files
          cp -r gh-pages-src/* gh-pages-deploy/

          # Check out the existing history file from the gh-pages branch
          # This avoids needing to fetch the full history of the main branch
          git fetch origin gh-pages:gh-pages || echo "gh-pages branch does not exist yet"
          if git show-ref --quiet refs/heads/gh-pages; then
            git checkout gh-pages -- benchmark-history.json
            # Update the history file with the new results
            jq -s '.[0] + [.[1]]' benchmark-history.json bench-results.json > temp_history.json && mv temp_history.json benchmark-history.json
            mv benchmark-history.json gh-pages-deploy/
          else
            # If the history file doesn't exist, create it from the current results
            jq -s '.' bench-results.json > gh-pages-deploy/benchmark-history.json
          fi

          # Switch back to the main branch context
          git checkout ${{ github.ref_name }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages-deploy

      - name: Generate and Commit README Summary
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Run the script to update the README
          node ./.github/workflows/update-readme.js

          # Commit and push the updated README
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit to README."
          else
            git commit -m "docs: Update benchmark summary in README for ${{ github.sha }}"
            git push origin HEAD
          fi
